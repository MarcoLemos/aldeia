name: Continuous Integration
on: push
jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:

        - name: Set up python
          uses: actions/setup-python@v2
          with:
              python-version: 3.11.1

        - name: Check out repository
          uses: actions/checkout@v2

        - name: Install Poetry
          uses: snok/install-poetry@v1
          with:
              virtualenvs-in-project: true

        - name: Load cached venv
          id: cached-poetry-dependencies
          uses: actions/cache@v2
          with:
              path: .venv
              key: venv-${{ hashFiles('**/poetry.lock') }}

        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          run: poetry install --no-interaction

        - name: Install mongosh
                run: |
                  sudo apt-get update
                  sudo apt-get install -y wget gnupg
                  wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
                  echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
                  sudo apt-get update
                  sudo apt-get install -y mongodb-mongosh
        - name: Create mongo Docker container
          uses: DigiPie/mongo-action@v2.0.0
          with:
            image_version: latest
            port: 27017
        - name: Test mongo connection
          run: "sudo mongosh localhost:27017"

        - name: Format
          run: make format

        - name: Run tests
          run: make test